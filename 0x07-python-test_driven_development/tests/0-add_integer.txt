>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(0, 0)
0
>>> add_integer(1.5, 1.5)
3
>>> add_integer(1.5, 1)
2
>>> add_integer(1.5, "1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer("1.5", 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer("1.5", "1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(-1, -1)
-2
>>> add_integer(-1, 1)
0
>>> add_integer(1, -1)
0
>>> add_integer(float(1), -1)
0
>>> add_integer(float(info), 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'info' is not defined
>>> add_integer(, 2)
  File "<stdin>", line 1
    add_integer(, 2)
                ^
SyntaxError: invalid syntax
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(2)
100
>>> add_integer(float('int'), 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: could not convert string to float: 'int'
